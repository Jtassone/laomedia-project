AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

#Globals:
#  Function:
#    AutoPublishAlias: live
#    DeploymentPreference:
#      Enabled: true
#      Type: Canary10Percent5Minutes
#      Role: !Ref CodeDeployRole

Resources:
  GetHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-GetHelloWorld'
      Handler: com.aws.codestar.projecttemplates.handler.HelloWorldHandler
      Runtime: java11
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get

  PostHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-PostHelloWorld'
      Handler: com.aws.codestar.projecttemplates.handler.HelloWorldHandler
      Runtime: java11
      MemorySize: 256
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post

  getAlgorithms:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getAlgorithms'
      Handler: com.aws.codestar.projecttemplates.handler.Algorithm.AlgorithmHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /algorithm
            Method: get

  getOptions:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-options'
      Handler: com.aws.codestar.projecttemplates.handler.OptionsHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /algorithm
            Method: options

  postAlgorithm:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-postAlgorithm'
      Handler: com.aws.codestar.projecttemplates.handler.Algorithm.AlgorithmPostHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /algorithms
            Method: post

  reclassifyAlgorithm:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-reclassifyAlgorithm'
      Handler: com.aws.codestar.projecttemplates.handler.Algorithm.AlgorithmReclassifyHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  deleteAlgorithm:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-deleteAlgorithm'
      Handler: com.aws.codestar.projecttemplates.handler.Algorithm.AlgorithmDeleteHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /algorithms
            Method: delete

  getClassification:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getClassification'
      Handler: com.aws.codestar.projecttemplates.handler.Classification.ClassificationHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /classifications
            Method: get

  postClassification:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-postClassification'
      Handler: com.aws.codestar.projecttemplates.handler.Classification.ClassificationPostHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /classifications
            Method: post

  deleteClassification:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-deleteClassification'
      Handler: com.aws.codestar.projecttemplates.handler.Classification.ClassificationDeleteHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /classifications
            Method: delete

  postImplementation:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-postImplementation'
      Handler: com.aws.codestar.projecttemplates.handler.Implementation.ImplementationPostHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /implementations
            Method: post

  getImplementation:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getImplementation'
      Handler: com.aws.codestar.projecttemplates.handler.Implementation.ImplementationHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /implementations
            Method: get

  deleteImplementation:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-deleteImplementation'
      Handler: com.aws.codestar.projecttemplates.handler.Implementation.ImplementationDeleteHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"
      Events:
        PostEvent:
          Type: Api
          Properties:
            Path: /implementations
            Method: delete

  getBenchmarks:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getBenchmarks'
      Handler: com.aws.codestar.projecttemplates.handler.Benchmark.BenchmarkHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  postBenchmark:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-postBenchmark'
      Handler: com.aws.codestar.projecttemplates.handler.Benchmark.BenchmarkPostHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  deleteBenchmark:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-deleteBenchmark'
      Handler: com.aws.codestar.projecttemplates.handler.Benchmark.BenchmarkDeleteHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  mergeClassification:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-mergeClassification'
      Handler: com.aws.codestar.projecttemplates.handler.Classification.MergeClassificationHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  getUsers:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getUsers'
      Handler: com.aws.codestar.projecttemplates.handler.User.UserHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  deleteUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-deleteUser'
      Handler: com.aws.codestar.projecttemplates.handler.User.DeleteUserHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  getUserEvents:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-getUserEvents'
      Handler: com.aws.codestar.projecttemplates.handler.User.UserEventHandler
      Runtime: java11
      MemorySize: 256
      Timeout: 10
      Role: "arn:aws:iam::617499510690:role/lambda_basic_execution"

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
